.orb-container {
  position: relative;
}

/* 可爱眼睛：固定在脸上（容器层），不受 .orb-scale 旋转/缩放影响 */
.orb-eyes {
  position: absolute;
  inset: 0;
  pointer-events: none;
  z-index: 6; /* 在波纹(5)之上，保证可见 */
  display: flex;
  align-items: center;
  justify-content: center;
}

/* 眼睛容器：控制左右位置与横向“左右看”位移 */
.orb-eye-wrap {
  width: 32px; /* 再大一点点 */
  height: 46px;
  margin: 0 10px; /* 眼距稍近 */
  display: flex;
  align-items: center;
  justify-content: center;
  animation: eyeLook 6.6s ease-in-out infinite;
}
.orb-eye-wrap.delay { animation-delay: 0s; }

/* 竖向椭圆眼睛（更细长） */
.orb-eye {
  width: 19px; /* 再大一点点 */
  height: 36px; /* 更竖长 */
  background: #F1E8FF; /* 柔和淡紫，避免强反光 */
  border-radius: 50%/68%; /* 两端更圆一点点 */
  box-shadow: 0 0 6px rgba(240,235,255,0.8), 0 0 16px rgba(190,160,255,0.35);
  animation: eyeBlink 3.8s ease-in-out infinite;
  overflow: visible;
}

/* IDLE 状态：眼睛回到暖桃 + 淡紫 */
.orb-container.idle .orb-eye {
  background: #FFF2E6; /* 柔暖米桃 */
  box-shadow: 0 0 6px rgba(255,213,179,0.70), 0 0 16px rgba(233,192,255,0.28);
}

/* 左右看（容器平移，眼珠整体动） */
@keyframes eyeLook {
  0%, 20% { transform: translateX(0); }
  28% { transform: translateX(-6px); }
  40% { transform: translateX(-6px); }
  60% { transform: translateX(6px); }
  72% { transform: translateX(6px); }
  86%, 100% { transform: translateX(0); }
}

/* 眨眼 */
@keyframes eyeBlink {
  0%, 92%, 100% { transform: scaleY(1); }
  96% { transform: scaleY(0.2); }
}

/* 立体感增强：在球体上加柔和高光与下方阴影（通过伪元素）*/
.orb-main::before {
  content: '';
  position: absolute;
  top: -8%;
  left: -8%;
  width: 60%;
  height: 60%;
  border-radius: 50%;
  background: radial-gradient(circle at 30% 30%, rgba(255,255,255,0.6), rgba(255,255,255,0));
  filter: blur(8px);
  pointer-events: none;
}
.orb-main::after {
  content: '';
  position: absolute;
  bottom: -10%;
  left: 10%;
  width: 80%;
  height: 50%;
  border-radius: 50%;
  background: radial-gradient(circle, rgba(0,0,0,0.12), rgba(0,0,0,0));
  filter: blur(12px);
  pointer-events: none;
}
.orb-container {
  position: relative;
  width: 200px;
  height: 200px;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto;
}

/* 新增外层缩放容器，使 Listening 时随音量缩放更明显且不破坏内部动画 */
.orb-scale {
  width: 180px;
  height: 180px;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  z-index: 2;
  transform-origin: center;
  will-change: transform;
}

/* Layer Blur 外圈：默认透明，IDLE 时启用 */
.orb-haze {
  position: absolute;
  inset: -42px;
  z-index: 1;
  border-radius: 50%;
  pointer-events: none;
  opacity: 0;
  transition: opacity .3s ease;
}
.orb-container.idle .orb-haze {
  opacity: 1;
  background: radial-gradient(
    circle at 40% 35%,
    rgba(134, 184, 211, 0.26) 0%,
    rgba(134, 184, 211, 0.16) 46%,
    rgba(134, 184, 211, 0.08) 72%,
    rgba(134, 184, 211, 0) 86%
  );
  filter: blur(38px);
}

.orb-main {
  position: relative;
  width: 180px;
  height: 180px;
  border-radius: 50%;
  transition: transform 0.8s var(--animation-easing);
  transform-style: preserve-3d;
}

/* IDLE 状态 - 轻微呼吸 */
.orb-container.idle .orb-main {
  animation: orbBreathe 4s ease-in-out infinite;
}

/* LISTENING 状态 - 放大 + 旋转 */
.orb-container.listening .orb-main {
  /* 旋转改由父层 .orb-scale 内联控制，避免 transform 冲突 */
  animation: orbPulse 1.6s ease-in-out infinite;
}

/* 说话时（通过外部 scale 叠加），增强颜色与发光强度可由父层内联样式控制。若需要强制速度更快：*/
.orb-container.listening .orb-main {
  --rotate-speed: 6s;
}

/* 扩散波纹 */
.orb-wave {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 50%;
  border: 6px solid rgba(120, 190, 255, 0.95); /* 更亮 */
  pointer-events: none;
  z-index: 5;
}

.orb-wave-1 {
  width: 180px;
  height: 180px;
  animation: waveExpand 1.4s ease-out infinite;
}

.orb-wave-2 {
  width: 180px;
  height: 180px;
  animation: waveExpand 1.4s ease-out infinite 0.45s;
}

.orb-wave-3 {
  width: 180px;
  height: 180px;
  animation: waveExpand 1.4s ease-out infinite 0.9s;
}

@keyframes waveExpand {
  0% {
    width: 180px;
    height: 180px;
    opacity: 0.95; /* 起始更亮 */
    border-width: 5px;
  }
  100% {
    width: 320px;
    height: 320px;
    opacity: 0.25; /* 尾迹更明显 */
    border-width: 1px;
  }
}

/* PROCESSING 状态：保持与 Listening 同配色，不再切暖色 */

/* 说话时：更快旋转并稍许弹性缩放 */
.orb-container.listening .speaking {
  animation: orbRotate 4s linear infinite, orbPulseStrong 1.2s ease-in-out infinite;
}

/* CONFIRM / OUTPUT 状态 - 轻微闪烁 */
.orb-container.confirm .orb-main,
.orb-container.output .orb-main {
  animation: orbBlink 3s ease-in-out infinite;
}

/* 主渐变层 */
.orb-gradient {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  background: radial-gradient(
    circle at 30% 30%,
    rgba(230, 184, 255, 0.9),
    rgba(200, 160, 255, 0.7) 40%,
    rgba(180, 140, 255, 0.5) 70%,
    rgba(160, 120, 255, 0.3)
  );
  filter: blur(1px) hue-rotate(var(--hue, 0deg)) saturate(var(--sat, 1));
  transition: background 0.8s ease;
}

/* 线性渐变覆盖层（仅 IDLE 用于柔化过渡）*/
.orb-overlay {
  position: absolute;
  inset: 0;
  border-radius: 50%;
  pointer-events: none;
  mix-blend-mode: screen;
  opacity: 0; /* 默认关闭 */
}
.orb-container.idle .orb-overlay {
  opacity: 1;
  background: linear-gradient(135deg,
    rgba(255, 213, 179, 0.45) 0%,
    rgba(233, 192, 255, 0.40) 100%
  );
  filter: blur(12px);
}

/* IDLE 专用主渐变覆盖：更偏暖的桃色 → 淡紫过渡 */
.orb-container.idle .orb-gradient {
  background: radial-gradient(
    circle at 35% 30%,
    rgba(255, 213, 179, 0.70),
    rgba(243, 200, 220, 0.45) 45%,
    rgba(233, 192, 255, 0.40) 75%,
    rgba(233, 192, 255, 0.28)
  );
}

/* LISTENING 状态 - 冷色调（蓝紫） */
.orb-container.listening .orb-gradient {
  background: radial-gradient(
    circle at 30% 30%,
    rgba(160, 210, 255, 1),
    rgba(140, 180, 255, 0.95) 40%,
    rgba(200, 180, 255, 0.85) 70%,
    rgba(220, 200, 255, 0.6)
  );
}

/* PROCESSING 状态 - 暖色调（粉橙） */
.orb-container.processing .orb-gradient {
  background: radial-gradient(
    circle at 30% 30%,
    rgba(255, 200, 220, 1),
    rgba(255, 180, 200, 0.9) 40%,
    rgba(255, 210, 190, 0.7) 70%,
    rgba(255, 220, 200, 0.4)
  );
}

/* 发光层 */
.orb-glow {
  position: absolute;
  inset: -20px;
  border-radius: 50%;
  background: radial-gradient(
    circle,
    rgba(230, 184, 255, 0.3),
    rgba(230, 184, 255, 0) 70%
  );
  filter: blur(25px);
  opacity: var(--glow, 0.6);
  transition: opacity 0.8s ease;
}

.orb-container.listening .orb-glow {
  opacity: 1;
  background: radial-gradient(
    circle,
    rgba(160, 210, 255, 0.7),
    rgba(160, 210, 255, 0) 70%
  );
  animation: glowPulse 2s ease-in-out infinite;
}

/* IDLE 下去掉边缘光晕，使边缘更干净 */
.orb-container.idle .orb-glow {
  opacity: 0;
  background: transparent;
  animation: none;
}

/* 确认/输出页与 IDLE 同配色，且去掉光晕 */
.orb-container.confirm .orb-gradient,
.orb-container.output .orb-gradient {
  background: radial-gradient(
    circle at 35% 30%,
    rgba(255, 213, 179, 0.70),
    rgba(243, 200, 220, 0.45) 45%,
    rgba(233, 192, 255, 0.40) 75%,
    rgba(233, 192, 255, 0.28)
  );
}

.orb-container.confirm .orb-overlay,
.orb-container.output .orb-overlay {
  opacity: 1;
  background: linear-gradient(135deg,
    rgba(255, 213, 179, 0.45) 0%,
    rgba(233, 192, 255, 0.40) 100%
  );
  filter: blur(12px);
}

.orb-container.confirm .orb-glow,
.orb-container.output .orb-glow {
  opacity: 0;
  background: transparent;
  animation: none;
}

.orb-container.processing .orb-glow {
  opacity: 0.9;
  background: radial-gradient(
    circle,
    rgba(255, 190, 210, 0.4),
    rgba(255, 190, 210, 0) 70%
  );
}

/* NO_OPTIONS 界面：统一为与 IDLE 相同的配色，并关闭光晕 */
.orb-container.no_options .orb-gradient {
  background: radial-gradient(
    circle at 35% 30%,
    rgba(255, 213, 179, 0.70),
    rgba(243, 200, 220, 0.45) 45%,
    rgba(233, 192, 255, 0.40) 75%,
    rgba(233, 192, 255, 0.28)
  );
}
.orb-container.no_options .orb-overlay {
  opacity: 1;
  background: linear-gradient(135deg,
    rgba(255, 213, 179, 0.45) 0%,
    rgba(233, 192, 255, 0.40) 100%
  );
  filter: blur(12px);
}
.orb-container.no_options .orb-glow {
  opacity: 0;
  background: transparent;
  animation: none;
}

/* 内部小球 */
.orb-particle {
  position: absolute;
  border-radius: 50%;
  mix-blend-mode: screen;
  filter: blur(8px);
  transition: all 0.8s var(--animation-easing);
}

/* 小球颜色和大小配置 */
.orb-particle-1 {
  width: 60px;
  height: 60px;
  top: 20%;
  left: 25%;
  background: radial-gradient(circle, rgba(180, 200, 255, 0.8), rgba(180, 200, 255, 0));
}

.orb-particle-2 {
  width: 80px;
  height: 80px;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: radial-gradient(circle, rgba(230, 184, 255, 0.9), rgba(230, 184, 255, 0));
}

.orb-particle-3 {
  width: 50px;
  height: 50px;
  bottom: 25%;
  right: 20%;
  background: radial-gradient(circle, rgba(200, 160, 255, 0.7), rgba(200, 160, 255, 0));
}

.orb-particle-4 {
  width: 70px;
  height: 70px;
  top: 35%;
  right: 15%;
  background: radial-gradient(circle, rgba(220, 200, 255, 0.6), rgba(220, 200, 255, 0));
}

.orb-particle-5 {
  width: 55px;
  height: 55px;
  bottom: 20%;
  left: 30%;
  background: radial-gradient(circle, rgba(190, 180, 255, 0.7), rgba(190, 180, 255, 0));
}

.orb-particle-6 {
  width: 45px;
  height: 45px;
  top: 15%;
  left: 55%;
  background: radial-gradient(circle, rgba(210, 190, 255, 0.6), rgba(210, 190, 255, 0));
}

.orb-particle-7 {
  width: 65px;
  height: 65px;
  top: 60%;
  left: 20%;
  background: radial-gradient(circle, rgba(180, 170, 255, 0.5), rgba(180, 170, 255, 0));
}

.orb-particle-8 {
  width: 75px;
  height: 75px;
  bottom: 30%;
  right: 35%;
  background: radial-gradient(circle, rgba(200, 180, 255, 0.8), rgba(200, 180, 255, 0));
}

/* Figma 配色在 IDLE 状态下的专用颜色与布局 */
.orb-container.idle .orb-particle-1 { /* 桃色主体 */
  top: 28%; left: 22%; width: 70px; height: 70px;
  background: radial-gradient(circle, rgba(255, 213, 179, 0.55), rgba(255, 213, 179, 0));
}
.orb-container.idle .orb-particle-2 { /* E9C0FF - 淡紫 */
  top: 36%; left: 56%; width: 88px; height: 88px;
  background: radial-gradient(circle, rgba(233, 192, 255, 0.50), rgba(233, 192, 255, 0));
}
.orb-container.idle .orb-particle-3 { /* 抑制深紫，改为很淡的紫粉 */
  bottom: 26%; right: 26%; width: 64px; height: 64px;
  background: radial-gradient(circle, rgba(233, 192, 255, 0.22), rgba(233, 192, 255, 0));
}
.orb-container.idle .orb-particle-4 { /* FFA100 - 橙黄高光（降低权重） */
  top: 22%; right: 18%; width: 60px; height: 60px;
  background: radial-gradient(circle, rgba(255, 161, 0, 0.18), rgba(255, 161, 0, 0));
}
.orb-container.idle .orb-particle-5 { /* 桃粉过渡 */
  bottom: 18%; left: 24%; width: 62px; height: 62px;
  background: radial-gradient(circle, rgba(255, 213, 179, 0.32), rgba(255, 213, 179, 0));
}
.orb-container.idle .orb-particle-6 { /* 冷淡紫阴影 */
  top: 18%; left: 48%; width: 50px; height: 50px;
  background: radial-gradient(circle, rgba(233, 192, 255, 0.22), rgba(233, 192, 255, 0));
}
.orb-container.idle .orb-particle-7 { /* 温暖补光（更接近桃色） */
  top: 58%; left: 30%; width: 70px; height: 70px;
  background: radial-gradient(circle, rgba(255, 213, 179, 0.24), rgba(255, 213, 179, 0));
}
.orb-container.idle .orb-particle-8 { /* 蓝粉衔接，降低紫感 */
  bottom: 32%; right: 38%; width: 80px; height: 80px;
  background: radial-gradient(circle, rgba(233, 192, 255, 0.28), rgba(233, 192, 255, 0));
}

/* LISTENING 状态 - 小球公转动画 */
.orb-container.listening .orb-particle-1 {
  animation: orbitParticle1 6s linear infinite;
}

.orb-container.listening .orb-particle-2 {
  animation: orbitParticle2 7s linear infinite;
}

.orb-container.listening .orb-particle-3 {
  animation: orbitParticle3 5s linear infinite;
}

.orb-container.listening .orb-particle-4 {
  animation: orbitParticle4 8s linear infinite;
}

.orb-container.listening .orb-particle-5 {
  animation: orbitParticle5 6.5s linear infinite;
}

.orb-container.listening .orb-particle-6 {
  animation: orbitParticle6 7.5s linear infinite;
}

.orb-container.listening .orb-particle-7 {
  animation: orbitParticle7 5.5s linear infinite;
}

.orb-container.listening .orb-particle-8 {
  animation: orbitParticle8 9s linear infinite;
}

/* PROCESSING 状态 - 小球漂移 */
.orb-container.processing .orb-particle {
  animation: particleDrift 4s ease-in-out infinite;
  filter: blur(12px);
}

/* 动画关键帧 */
@keyframes orbBreathe {
  0%, 100% {
    transform: scale(1);
    opacity: 0.9;
  }
  50% {
    transform: scale(1.05);
    opacity: 1;
  }
}

@keyframes orbRotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes orbPulse {
  0%, 100% {
    filter: brightness(1);
  }
  50% {
    filter: brightness(1.15);
  }
}

@keyframes orbPulseStrong {
  0%, 100% {
    transform: scale(1);
    filter: brightness(1.05);
  }
  50% {
    transform: scale(1.08);
    filter: brightness(1.25);
  }
}

@keyframes orbBlink {
  0%, 100% {
    opacity: 0.85;
  }
  50% {
    opacity: 1;
  }
}

@keyframes glowPulse {
  0%, 100% {
    transform: scale(1);
    opacity: 0.8;
  }
  50% {
    transform: scale(1.1);
    opacity: 1;
  }
}

@keyframes orbitParticle1 {
  from {
    transform: rotate(0deg) translateX(40px) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translateX(40px) rotate(-360deg);
  }
}

@keyframes orbitParticle2 {
  from {
    transform: translate(-50%, -50%) rotate(0deg) translateX(30px) rotate(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotate(360deg) translateX(30px) rotate(-360deg);
  }
}

@keyframes orbitParticle3 {
  from {
    transform: rotate(0deg) translateX(35px) rotate(0deg);
  }
  to {
    transform: rotate(-360deg) translateX(35px) rotate(360deg);
  }
}

@keyframes orbitParticle4 {
  from {
    transform: rotate(0deg) translateX(45px) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translateX(45px) rotate(-360deg);
  }
}

@keyframes orbitParticle5 {
  from {
    transform: rotate(0deg) translateX(38px) rotate(0deg);
  }
  to {
    transform: rotate(-360deg) translateX(38px) rotate(360deg);
  }
}

@keyframes orbitParticle6 {
  from {
    transform: rotate(0deg) translateX(42px) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translateX(42px) rotate(-360deg);
  }
}

@keyframes orbitParticle7 {
  from {
    transform: rotate(0deg) translateX(33px) rotate(0deg);
  }
  to {
    transform: rotate(-360deg) translateX(33px) rotate(360deg);
  }
}

@keyframes orbitParticle8 {
  from {
    transform: rotate(0deg) translateX(50px) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translateX(50px) rotate(-360deg);
  }
}

@keyframes particleDrift {
  0%, 100% {
    transform: translate(0, 0);
  }
  25% {
    transform: translate(5px, -8px);
  }
  50% {
    transform: translate(-5px, 5px);
  }
  75% {
    transform: translate(8px, 3px);
  }
}

/* 眼睛设计已移除 */

